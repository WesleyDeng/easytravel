<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="ad19f038-2bbd-471d-abbc-92c1eb65a14b" name="armandorv@ARMANDORV-PC 2013-05-11 07:28:02" runUser="armandorv-pc\armandorv" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="c8c134b9-4e63-4f20-86f5-020a6ecd1d56">
    <Description>Esta es la configuración de pruebas predeterminada para una ejecución de pruebas local.</Description>
    <Deployment enabled="false" runDeploymentRoot="armandorv_ARMANDORV-PC 2013-05-11 07_28_02">
      <DeploymentItem filename="D:\Work\git-hub\easytravel\EasytravelDesktop\EasytravelWsClient\bin\Debug\EasytravelWsClient.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2013-05-11T07:28:02.3391184+02:00" queuing="2013-05-11T07:28:06.6993678+02:00" start="2013-05-11T07:28:07.0253864+02:00" finish="2013-05-11T07:28:10.8486051+02:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="TestGetTravels" storage="d:\work\git-hub\easytravel\easytraveldesktop\easytravelwsclienttests\bin\debug\easytravelwsclienttests.dll" id="5fd63081-93ec-491b-3b9d-aabf20c39f7f">
      <Execution id="25dceac6-8ed2-48ff-bc22-7a7fd5918a55" />
      <TestMethod codeBase="D:/Work/git-hub/easytravel/EasytravelDesktop/EasytravelWsClientTests/bin/Debug/EasytravelWsClientTests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="EasytravelWsClientTests.TravelsServiceTest, EasytravelWsClientTests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestGetTravels" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Resultados que no están en la lista" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Todos los resultados cargados" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="5fd63081-93ec-491b-3b9d-aabf20c39f7f" executionId="25dceac6-8ed2-48ff-bc22-7a7fd5918a55" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="25dceac6-8ed2-48ff-bc22-7a7fd5918a55" testId="5fd63081-93ec-491b-3b9d-aabf20c39f7f" testName="TestGetTravels" computerName="ARMANDORV-PC" duration="00:00:02.4514759" startTime="2013-05-11T07:28:07.5244150+02:00" endTime="2013-05-11T07:28:10.7255981+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="25dceac6-8ed2-48ff-bc22-7a7fd5918a55">
      <Output>
        <ErrorInfo>
          <Message>El método de prueba EasytravelWsClientTests.TravelsServiceTest.TestGetTravels produjo la excepción: 
System.InvalidOperationException: No se encontró el elemento de extremo predeterminado que hace referencia al contrato 'TravelsWs.travelsWebService' en la sección de configuración de cliente de ServiceModel. La razón puede ser que no se encontró ningún archivo de configuración para la aplicación o que no se encontró ningún elemento de extremo correspondiente a este contrato en el elemento de cliente.</Message>
          <StackTrace>    en System.ServiceModel.Description.ConfigLoader.LoadChannelBehaviors(ServiceEndpoint serviceEndpoint, String configurationName)
   en System.ServiceModel.ChannelFactory.ApplyConfiguration(String configurationName, Configuration configuration)
   en System.ServiceModel.ChannelFactory.ApplyConfiguration(String configurationName)
   en System.ServiceModel.ChannelFactory.InitializeEndpoint(String configurationName, EndpointAddress address)
   en System.ServiceModel.ChannelFactory`1..ctor(String endpointConfigurationName, EndpointAddress remoteAddress)
   en System.ServiceModel.EndpointTrait`1.CreateSimplexFactory()
   en System.ServiceModel.ClientBase`1.CreateChannelFactoryRef(EndpointTrait`1 endpointTrait)
   en System.ServiceModel.ClientBase`1.InitializeChannelFactoryRef()
   en System.ServiceModel.ClientBase`1..ctor()
   en Armandorv.EasytravelWsClient.TravelsWs.travelsWebServiceClient..ctor() en D:\Work\git-hub\easytravel\EasytravelDesktop\EasytravelWsClient\Service References\TravelsWs\Reference.cs:línea 1181
   en Armandorv.EasytravelWsClient.TravelsService.GetTravels(String term) en D:\Work\git-hub\easytravel\EasytravelDesktop\EasytravelWsClient\TravelsService.cs:línea 13
   en EasytravelWsClientTests.TravelsServiceTest.TestGetTravels() en D:\Work\git-hub\easytravel\EasytravelDesktop\EasytravelWsClientTests\TravelsServiceTest.cs:línea 66
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>